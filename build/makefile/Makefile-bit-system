################################################
#
#	Bit Engine - System Makefile
#
################################################

CC				= g++
CCFLAGS			= -std=gnu++0x
CCPATHS			= include extlibs/include
AR				= ar rcs
RM				= rm -f
MKDIR			= mkdir -p
OBJ_PATH        = obj/Linux/32
LIB_PATH        = lib/Linux/32
EXTLIBS_PATH	= extlibs
DEBUG_POSTFIX	= -d

# Libraries
LIB_AUDIO		= bit-audio
LIB_GRAPHICS	= bit-graphics
LIB_NETWORK		= bit-network
LIB_SYSTEM		= bit-system
LIB_WINDOW		= bit-window


# All target
all: debug_static debug_dynamic release_static release_dynamic


# DEBUG targets
# Static DEBUG target
debug_static: CCFLAGS += -g -W -O0
debug_static: $(LIB_PATH)/$(LIB_SYSTEM)$(DEBUG_POSTFIX).a


# Dynamic DEBUG target
debug_dynamic:
	@echo Not supporting $@ target yet

# RELEASE targets
# Static RELEASE target
release_static: $(LIB_PATH)/$(LIB_SYSTEM).a

# Dynamic RELEASE target
release_dynamic:
	@echo Not supporting $@ target yet


# System targets
SYSTEM_CPP = $(shell find source/Bit/System -type f -name "*.cpp" )
SYSTEM_CPP += source/Bit/System.cpp
SYSTEM_OBJ_DEBUG_STATIC = $(addprefix $(OBJ_PATH)/debug_static/$(LIB_SYSTEM)/, $(patsubst %.cpp, %.o, $(SYSTEM_CPP)))
SYSTEM_OBJ_RELEASE_STATIC = $(addprefix $(OBJ_PATH)/release_static/$(LIB_SYSTEM)/, $(patsubst %.cpp, %.o, $(SYSTEM_CPP)))

# Static debug system target
$(LIB_PATH)/$(LIB_SYSTEM)$(DEBUG_POSTFIX).a: $(SYSTEM_OBJ_DEBUG_STATIC)
	$(MKDIR) $(LIB_PATH)
	$(AR) $@ $^
# Static release system target
$(LIB_PATH)/$(LIB_SYSTEM).a: $(SYSTEM_OBJ_RELEASE_STATIC)
	$(MKDIR) $(LIB_PATH)
	$(AR) $@ $^

# System objects
# Static debug system objects
$(OBJ_PATH)/debug_static/$(LIB_SYSTEM)/%.o: %.cpp
	$(MKDIR) $(dir $@)
	$(CC) $(CCFLAGS) $(addprefix -I, $(CCPATHS)) -c $< -o $@
	@echo Compiling: $<

# Static release system objects
$(OBJ_PATH)/release_static/$(LIB_SYSTEM)/%.o: %.cpp
	$(MKDIR) $(dir $@)
	$(CC) $(CCFLAGS) $(addprefix -I, $(CCPATHS)) -c $< -o $@
	@echo Compiling: $<



# Clean target
.PHONY: clean cleanall

clean:
	$(RM) -rf obj

cleanall: clean
	$(RM) -rf lib

