// ///////////////////////////////////////////////////////////////////////////
// Copyright (C) 2013 Jimmie Bergmann - jimmiebergmann@gmail.com
//
// This software is provided 'as-is', without any express or
// implied warranty. In no event will the authors be held
// liable for any damages arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute
// it freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented;
//    you must not claim that you wrote the original software.
//    If you use this software in a product, an acknowledgment
//    in the product documentation would be appreciated but
//    is not required.
//
// 2. Altered source versions must be plainly marked as such,
//    and must not be misrepresented as being the original software.
//
// 3. This notice may not be removed or altered from any
//    source distribution.
// ///////////////////////////////////////////////////////////////////////////

#ifndef BIT_SYSTEM_TIMESTAMP_HPP
#define BIT_SYSTEM_TIMESTAMP_HPP

#include <Bit/Build.hpp>
#include <string>

namespace Bit
{

	////////////////////////////////////////////////////////////////
	/// \ingroup System
	/// \brief Timestamp class
	///
	////////////////////////////////////////////////////////////////
	class BIT_API Timestamp
	{

	public:

		////////////////////////////////////////////////////////////////
		/// \brief Default constructor
		///
		////////////////////////////////////////////////////////////////
		Timestamp();

		////////////////////////////////////////////////////////////////
		/// \brief Constructor
		///
		////////////////////////////////////////////////////////////////
		Timestamp(	const Uint16	p_Year,
					const Uint8		p_Month,
					const Uint8		p_Day,
					const Uint8		p_Hours,
					const Uint8		p_Minutes,
					const Uint8		p_Seconds,
					const Uint32	p_MicroSeconds);

		////////////////////////////////////////////////////////////////
		/// \brief Set the year.
		///
		////////////////////////////////////////////////////////////////
		void SetYear(const Uint16 p_Year);

		////////////////////////////////////////////////////////////////
		/// \brief Set the month.
		///
		////////////////////////////////////////////////////////////////
		void SetMonth(const Uint8 p_Month);

		////////////////////////////////////////////////////////////////
		/// \brief Set the day.
		///
		////////////////////////////////////////////////////////////////
		void SetDay(const Uint8 p_Day);

		////////////////////////////////////////////////////////////////
		/// \brief Set the hour.
		///
		////////////////////////////////////////////////////////////////
		void SetHours(const Uint8 p_Hours);

		////////////////////////////////////////////////////////////////
		/// \brief Set the minute.
		///
		////////////////////////////////////////////////////////////////
		void SetMinutes(const Uint8 p_Minutes);

		////////////////////////////////////////////////////////////////
		/// \brief Set the second.
		///
		////////////////////////////////////////////////////////////////
		void SetSeconds(const Uint8 p_Seconds);

		////////////////////////////////////////////////////////////////
		/// \brief Set the microsecond.
		///
		////////////////////////////////////////////////////////////////
		void SetMicroseconds(const Uint32 p_MicroSeconds);

		////////////////////////////////////////////////////////////////
		/// \brief Get the year.
		///
		////////////////////////////////////////////////////////////////
		Int32 GetYear() const;

		////////////////////////////////////////////////////////////////
		/// \brief Get the month.
		///
		////////////////////////////////////////////////////////////////
		Int32 GetMonth() const;

		////////////////////////////////////////////////////////////////
		/// \brief Get the day.
		///
		////////////////////////////////////////////////////////////////
		Int32 GetDay() const;

		////////////////////////////////////////////////////////////////
		/// \brief Get the hour.
		///
		////////////////////////////////////////////////////////////////
		Int32 GetHours() const;

		////////////////////////////////////////////////////////////////
		/// \brief Get the minute.
		///
		////////////////////////////////////////////////////////////////
		Int32 GetMinutes() const;

		////////////////////////////////////////////////////////////////
		/// \brief Get the second.
		///
		////////////////////////////////////////////////////////////////
		Int32 GetSeconds() const;

		////////////////////////////////////////////////////////////////
		/// \brief Get the microsecond.
		///
		////////////////////////////////////////////////////////////////
		Int32 GetMicroseconds() const;

		////////////////////////////////////////////////////////////////
		/// \brief Validate the timestamp.
		///
		/// \return True if valid, else false.
		///
		////////////////////////////////////////////////////////////////
		Bool Validate() const;

		////////////////////////////////////////////////////////////////
		/// \brief Check if the year is a leap year.
		///
		////////////////////////////////////////////////////////////////
		Bool IsLeapYear() const;

		////////////////////////////////////////////////////////////////
		/// \brief Static function for getting the timestap of right now.
		///
		////////////////////////////////////////////////////////////////
		static Timestamp Now();

	private:

		// Private variables
		Uint16		m_Year;
		Uint8		m_Month;
		Uint8		m_Day;
		Uint8		m_Hours;
		Uint8		m_Minutes;
		Uint8		m_Seconds;
		Uint32		m_MicroSeconds;

	};


}

#endif